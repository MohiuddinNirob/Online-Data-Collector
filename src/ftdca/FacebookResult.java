/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ftdca;
import facebook4j.Facebook;
import facebook4j.FacebookException;
import facebook4j.FacebookFactory;
import facebook4j.Post;
import facebook4j.Reading;
import facebook4j.conf.Configuration;
import facebook4j.conf.ConfigurationBuilder;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import javax.swing.table.*;
/**
 *
 * @author Mehedi Hasan
 */
public class FacebookResult extends javax.swing.JFrame {
    private String AccessToken, GroupId;
    private JSONObject obj;
    private JSONArray list;
    private boolean IsTableLoaded =  false;
    /**
     * Creates new form FacebookResult
     */
    public FacebookResult() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AccessTokenLabel = new javax.swing.JLabel();
        GroupIdLabel = new javax.swing.JLabel();
        GroupIdField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        AccessTokenField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResultTable = new javax.swing.JTable();
        BacktoMenuButton = new javax.swing.JButton();
        SaveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(3840, 2160));
        setMinimumSize(new java.awt.Dimension(1200, 700));

        AccessTokenLabel.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        AccessTokenLabel.setText("Enter AccessToken");

        GroupIdLabel.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        GroupIdLabel.setText("Enter Group ID");

        SearchButton.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        ResultTable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        ResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Post", "Date", "PostId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ResultTable.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(ResultTable);
        ResultTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (ResultTable.getColumnModel().getColumnCount() > 0) {
            ResultTable.getColumnModel().getColumn(0).setPreferredWidth(35);
            ResultTable.getColumnModel().getColumn(1).setPreferredWidth(1040);
            ResultTable.getColumnModel().getColumn(2).setPreferredWidth(75);
            ResultTable.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        BacktoMenuButton.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        BacktoMenuButton.setText("Menu");
        BacktoMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BacktoMenuButtonActionPerformed(evt);
            }
        });

        SaveButton.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addComponent(BacktoMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AccessTokenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GroupIdLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AccessTokenField, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                    .addComponent(GroupIdField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AccessTokenLabel)
                            .addComponent(AccessTokenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GroupIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GroupIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BacktoMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 11, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
     if(AccessTokenField.getText().isEmpty() || GroupIdField.getText().isEmpty()){
         JOptionPane.showMessageDialog(null, "Both Fields are required!");
     } else {
        AccessToken = AccessTokenField.getText();
        GroupId = GroupIdField.getText();
        obj = new JSONObject();
        list = new JSONArray();
        try {
            ConfigurationStarter();
        } catch (FacebookException ex) {
            Logger.getLogger(FacebookResult.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void BacktoMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BacktoMenuButtonActionPerformed
        this.setVisible(false);
        Menu menu = new Menu();
        menu.setVisible(true);
    }//GEN-LAST:event_BacktoMenuButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        if(IsTableLoaded){
            try {
                Date date = new Date();
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd_MM_yyyy_hh_mm_ss");
                obj.put("data", list);
                FileWriter file = new FileWriter("files\\"+simpleDateFormat.format(date)+".json");
                file.write(obj.toJSONString());
                file.flush();
                JOptionPane.showMessageDialog(null, "Done");
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_SaveButtonActionPerformed

    
    public void ConfigurationStarter() throws FacebookException{
        
        GetCredentials g = new GetCredentials();
     // Create conf builder and set authorization and access keys
        ConfigurationBuilder configurationBuilder = new ConfigurationBuilder();
        configurationBuilder.setDebugEnabled(true);
        configurationBuilder.setOAuthAppId(g.GetAppId());
        configurationBuilder.setOAuthAppSecret(g.GetAppSecret());
        configurationBuilder.setOAuthAccessToken(AccessToken);
        configurationBuilder.setOAuthPermissions("email, publish_stream, id, name, first_name, last_name, read_stream , generic");
        configurationBuilder.setUseSSL(true);
        configurationBuilder.setJSONStoreEnabled(true);

        // Create configuration and get Facebook instance
        Configuration configuration = configurationBuilder.build();
        FacebookFactory ff = new FacebookFactory(configuration);
        Facebook Facebook = ff.getInstance();

        String searchPost = GroupId;
        getFacebookPostes(Facebook, searchPost); //fetch
        IsTableLoaded = true;        
 }

    // This method is used to get Facebook posts based on the search string set
    // above
    public void getFacebookPostes(Facebook facebook, String searchPost)
                    throws FacebookException {
            
            SimpleDateFormat DateFormat = new SimpleDateFormat("yyyy-MM-dd");
            
            DefaultTableModel row = (DefaultTableModel)ResultTable.getModel();
            int i = 1;
            facebook4j.ResponseList<Post> results =  facebook.getPosts(searchPost, new Reading().limit(100));
            for(Post post : results) {
                    row.addRow(new Object[]{i, post.getMessage(), DateFormat.format(post.getCreatedTime()), post.getId()});
                    list.add(post.getMessage());
                    list.add(DateFormat.format(post.getCreatedTime()));
                    list.add(post.getId());
                    i++;
            }
	}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccessTokenField;
    private javax.swing.JLabel AccessTokenLabel;
    private javax.swing.JButton BacktoMenuButton;
    private javax.swing.JTextField GroupIdField;
    private javax.swing.JLabel GroupIdLabel;
    private javax.swing.JTable ResultTable;
    private javax.swing.JButton SaveButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
