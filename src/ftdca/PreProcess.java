/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ftdca;

import javax.swing.JFileChooser;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.json.simple.*;

import java.util.Iterator;
import java.util.logging.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author Mehedi Hasan
 */
public class PreProcess extends javax.swing.JFrame {
        private int i = 1;
        private DefaultTableModel row;
        private boolean IsTableLoaded = false;
        private JSONObject obj;
        private JSONParser parser;
        private JSONArray list;
        
    /**
     * Creates new form PreProcess
     */
    public PreProcess() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NewRowField = new javax.swing.JTextField();
        ChooseFileButton = new javax.swing.JButton();
        AddRowButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        DeleteRowNum = new javax.swing.JTextField();
        DeleteRowButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        SaveButton = new javax.swing.JButton();
        MenuButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        setMaximumSize(new java.awt.Dimension(3840, 2160));
        setMinimumSize(new java.awt.Dimension(1200, 700));
        setPreferredSize(new java.awt.Dimension(1200, 700));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Post", "Date", "PostId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(Table);
        Table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (Table.getColumnModel().getColumnCount() > 0) {
            Table.getColumnModel().getColumn(0).setPreferredWidth(35);
            Table.getColumnModel().getColumn(1).setPreferredWidth(1040);
            Table.getColumnModel().getColumn(2).setPreferredWidth(75);
            Table.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        jLabel1.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        jLabel1.setText("Load JSON");

        jLabel2.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        jLabel2.setText("Add New Row");

        ChooseFileButton.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        ChooseFileButton.setText("Choose");
        ChooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseFileButtonActionPerformed(evt);
            }
        });

        AddRowButton.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        AddRowButton.setText("Add");
        AddRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRowButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        jLabel3.setText("Delete Row No");

        DeleteRowButton.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        DeleteRowButton.setText("Delete");
        DeleteRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRowButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        jLabel4.setText("Save JSON");

        SaveButton.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        MenuButton.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        MenuButton.setText("Go to Menu");
        MenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuButtonActionPerformed(evt);
            }
        });

        ClearButton.setFont(new java.awt.Font("Lucida Calligraphy", 0, 14)); // NOI18N
        ClearButton.setText("Clear Table");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1180, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ChooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)
                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addComponent(MenuButton)
                        .addGap(106, 106, 106)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SaveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DeleteRowNum, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                    .addComponent(NewRowField))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddRowButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DeleteRowButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(ChooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NewRowField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(DeleteRowNum, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseFileButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        row = (DefaultTableModel)Table.getModel(); 
        parser = new JSONParser();
        try {
            Object obj = parser.parse(new FileReader(f));
            IsTableLoaded = true;
            JSONObject jsonObject = (JSONObject) obj;
            JSONArray msg = (JSONArray) jsonObject.get("data");
            Iterator<String> iterator = msg.iterator();
            while (iterator.hasNext()) {
                row.addRow(new Object[]{i++, iterator.next(), iterator.next(), iterator.next()});
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (org.json.simple.parser.ParseException ex) {
            Logger.getLogger(PreProcess.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ChooseFileButtonActionPerformed

    private void AddRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRowButtonActionPerformed
        if(IsTableLoaded == true){
            if(NewRowField.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please enter something!");
            } else {
                SimpleDateFormat DateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date date = new Date();
                row.addRow(new Object[]{i++, NewRowField.getText(), DateFormat.format(date), -1}); //generated by user
                NewRowField.setText("");
            }
        } else {
                JOptionPane.showMessageDialog(null, "Must Load a JSON first!");
        }
    }//GEN-LAST:event_AddRowButtonActionPerformed

    private void DeleteRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRowButtonActionPerformed
        if(IsTableLoaded == true){
            String no = DeleteRowNum.getText();
            if(no.isEmpty()){
                JOptionPane.showMessageDialog(null, "Please enter an ID number!");
            } else {
                int Del = Integer.parseInt(DeleteRowNum.getText());
                int r = row.getRowCount();

                for(int j = 0; j < r; j++){
                    if(Del == (int)row.getValueAt(j, 0)){
                        Del = j;
                        break;
                    }
                }
                if(Del >= r){
                    JOptionPane.showMessageDialog(null, "Row "+Del+" Does Not Exist");
                } else{
                    row.removeRow(Del);
                    DeleteRowNum.setText("");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Must Load a JSON first!");
        }
    }//GEN-LAST:event_DeleteRowButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        if(IsTableLoaded){
            Date date = new Date();
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd_MM_yyyy_hh_mm_ss");
            obj = new JSONObject();
            list = new JSONArray();
            int r = row.getRowCount();
            for(int m = 0; m < r; m++){
                if(row.getValueAt(m, 1)!= null){
                    list.add(row.getValueAt(m, 1)); //always ignore 1st column, only take second column
                    list.add(row.getValueAt(m, 2));
                    list.add(row.getValueAt(m, 3));
                }
            }
            obj.put("data", list);
            FileWriter file = null;
            try {
                file = new FileWriter("files\\"+simpleDateFormat.format(date)+".json");
                file.write(obj.toJSONString());
                file.flush();
                JOptionPane.showMessageDialog(null, "Saved file.");
            } catch (IOException ex) {
                Logger.getLogger(PreProcess.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Must Have Data on the Table!");
        }
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void MenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuButtonActionPerformed
        Menu menu = new Menu();
        this.setVisible(false);
        menu.setVisible(true);
    }//GEN-LAST:event_MenuButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        if(IsTableLoaded){
            try{
                while(row.getRowCount() != 0){
                    row.removeRow(row.getRowCount() - 1);
                }
                i = 1;
                IsTableLoaded = false;
            } catch(Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_ClearButtonActionPerformed


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddRowButton;
    private javax.swing.JButton ChooseFileButton;
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton DeleteRowButton;
    private javax.swing.JTextField DeleteRowNum;
    private javax.swing.JButton MenuButton;
    private javax.swing.JTextField NewRowField;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTable Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
